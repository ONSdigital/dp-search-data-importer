// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"context"
	"github.com/ONSdigital/dp-search-data-importer/config"
	"github.com/ONSdigital/dp-search-data-importer/esclient"
	"sync"
)

var (
	lockClientMockSubmitBulkToES sync.RWMutex
)

// Ensure, that ClientMock does implement Client.
// If this is not the case, regenerate this file with moq.
var _ esclient.Client = &ClientMock{}

// ClientMock is a mock implementation of esclient.Client.
//
//     func TestSomethingThatUsesClient(t *testing.T) {
//
//         // make and configure a mocked esclient.Client
//         mockedClient := &ClientMock{
//             SubmitBulkToESFunc: func(ctx context.Context, cfg *config.Config, esDestIndex string, esDestURL string, bulk []byte) ([]byte, error) {
// 	               panic("mock out the SubmitBulkToES method")
//             },
//         }
//
//         // use mockedClient in code that requires esclient.Client
//         // and then make assertions.
//
//     }
type ClientMock struct {
	// SubmitBulkToESFunc mocks the SubmitBulkToES method.
	SubmitBulkToESFunc func(ctx context.Context, cfg *config.Config, esDestIndex string, esDestURL string, bulk []byte) ([]byte, error)

	// calls tracks calls to the methods.
	calls struct {
		// SubmitBulkToES holds details about calls to the SubmitBulkToES method.
		SubmitBulkToES []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Cfg is the cfg argument value.
			Cfg *config.Config
			// EsDestIndex is the esDestIndex argument value.
			EsDestIndex string
			// EsDestURL is the esDestURL argument value.
			EsDestURL string
			// Bulk is the bulk argument value.
			Bulk []byte
		}
	}
}

// SubmitBulkToES calls SubmitBulkToESFunc.
func (mock *ClientMock) SubmitBulkToES(ctx context.Context, cfg *config.Config, esDestIndex string, esDestURL string, bulk []byte) ([]byte, error) {
	if mock.SubmitBulkToESFunc == nil {
		panic("ClientMock.SubmitBulkToESFunc: method is nil but Client.SubmitBulkToES was just called")
	}
	callInfo := struct {
		Ctx         context.Context
		Cfg         *config.Config
		EsDestIndex string
		EsDestURL   string
		Bulk        []byte
	}{
		Ctx:         ctx,
		Cfg:         cfg,
		EsDestIndex: esDestIndex,
		EsDestURL:   esDestURL,
		Bulk:        bulk,
	}
	lockClientMockSubmitBulkToES.Lock()
	mock.calls.SubmitBulkToES = append(mock.calls.SubmitBulkToES, callInfo)
	lockClientMockSubmitBulkToES.Unlock()
	return mock.SubmitBulkToESFunc(ctx, cfg, esDestIndex, esDestURL, bulk)
}

// SubmitBulkToESCalls gets all the calls that were made to SubmitBulkToES.
// Check the length with:
//     len(mockedClient.SubmitBulkToESCalls())
func (mock *ClientMock) SubmitBulkToESCalls() []struct {
	Ctx         context.Context
	Cfg         *config.Config
	EsDestIndex string
	EsDestURL   string
	Bulk        []byte
} {
	var calls []struct {
		Ctx         context.Context
		Cfg         *config.Config
		EsDestIndex string
		EsDestURL   string
		Bulk        []byte
	}
	lockClientMockSubmitBulkToES.RLock()
	calls = mock.calls.SubmitBulkToES
	lockClientMockSubmitBulkToES.RUnlock()
	return calls
}
